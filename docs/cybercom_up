#!/bin/bash

# Pull in configuration items
source /Users/mast4541/github/cu/misc/etag/config/config.sh

#Docker worker host
host_ip="example.oscer.ou.edu"
#If docker is going to ssh to docker host. Need to setup keys and docker_username.
docker_username="mstacy"
#PostgreSQL
docker run -d --name etag_postgres \
  -v `pwd`/../data/mongo:/var/lib/postgresql/data \
  -v `pwd`/postgres_setup:/opt \
  postgres

#Mongo Data Node
echo "************** Mongo Data Node ***********"
docker volume create --name etag_mongodata
if [ -f /Users/mast4541/github/cu/misc/etag/config/thisisfirstrun ]; then
  echo "*********** Create Mongo User ************"
  docker run -it --rm \
    -v etag_mongodata:/data/db:z \
    -v /Users/mast4541/github/cu/misc/etag/config/config.sh:/config.sh \
    -v /Users/mast4541/github/cu/misc/etag/config/addmongouser:/addmongouser \
    --entrypoint /addmongouser mongo
  rm -f /Users/mast4541/github/cu/misc/etag/config/thisisfirstrun
fi

docker run -d --name etag_mongo \
  -v etag_mongodata:/data/db:z \
  -v /Users/mast4541/github/cu/misc/etag/config/ssl/backend:/ssl:z \
  mongo --sslMode requireSSL \
        --sslPEMKeyFile /ssl/server/mongodb.pem \
        --sslCAFile /ssl/testca/cacert.pem \
        --auth

#Rabbitmq
echo "************** Rabbitmq        ***********"
docker run -d --name etag_rabbitmq \
  -v /Users/mast4541/github/cu/misc/etag/config/ssl/backend:/ssl:z \
  -e "RABBITMQ_DEFAULT_USER=${broker_username}" \
  -e "RABBITMQ_DEFAULT_PASS=${broker_password}" \
  -e "RABBITMQ_DEFAULT_VHOST=${vhost}" \
  -e "RABBITMQ_SSL_CERT_FILE=/ssl/server/cert.pem" \
  -e "RABBITMQ_SSL_KEY_FILE=/ssl/server/key.pem" \
  -e "RABBITMQ_SSL_CA_FILE=/ssl/testca/cacert.pem" \
  rabbitmq #cybercom/rabbitmq

#Celery
echo "********** Celery Async Queue ************"
#-v path_to_key/.ssh:/root/.ssh:z
docker run -d --name etag_celery \
  --link etag_rabbitmq:cybercom_rabbitmq \
  --link etag_mongo:cybercom_mongo \
  -v /Users/mast4541/github/cu/misc/etag/config/celery/code:/code:z \
  -v /Users/mast4541/github/cu/misc/etag/config/celery/env:/env:z \
  -v /Users/mast4541/github/cu/misc/etag/log:/log:z \
  -v /Users/mast4541/github/cu/misc/etag/data:/data:z \
  -v /Users/mast4541/github/cu/misc/etag/config/ssl/backend:/ssl:z \
  -e "docker_worker=$host_ip" \
  -e "docker_username=$docker_username" \
  -e "C_FORCE_ROOT=true" \
  -e "CELERY_CONCURRENCY=8" \
  cybercom/celery

#memcache
echo "********* memcached   ********************"
docker run --name etag_memcache -d memcached

#API
echo "*********  API       *********************"
docker run -d --name etag_api \
  --link etag_memcache:cybercom_memcache \
  --link etag_mongo:cybercom_mongo \
  --link etag_rabbitmq:cybercom_rabbitmq \
  --link etag_postgres:etag_postgres \
  -p 8080:8080 \
  -v /Users/mast4541/github/cu/misc/etag/config/ssl/backend:/ssl:z \
  -v /Users/mast4541/github/cu/misc/etag/api_code:/usr/src/app:z \
  -v /Users/mast4541/github/cu/misc/etag/config/api_config.py:/usr/src/app/api/config.py:z \
  -v /Users/mast4541/github/cu/misc/etag/config/db.sqlite3:/usr/src/app/db.sqlite3:z \
  -v /Users/mast4541/github/cu/misc/etag/log:/log:z \
  -v /Users/mast4541/github/cu/misc/etag/data:/data:z \
  api

# Nginx - if only one platform on system can leave in setup. 
# If multiple cybercommons application running on same system. Comment out and add service with nginx to match api reverse proxy ports from api. See nginx config an default!

echo "********* Ngnix        ********************"
docker run -p 80:80 --name etag_nginx \
  --link etag_api \
  -v /Users/mast4541/github/cu/misc/etag/data:/data:z \
  -v /Users/mast4541/github/cu/misc/etag/config/nginx/nginx.conf:/etc/nginx/nginx.conf:z \
  -v /Users/mast4541/github/cu/misc/etag/config/nginx/default.conf:/etc/nginx/conf.d/default.conf:z \
  -d nginx


#Configure and add-ons to containers
echo "******** Configure Cybercom **************"

echo "********* Celery Requires wget ************"
docker exec -it etag_celery apt-get install wget

